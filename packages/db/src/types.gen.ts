/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { CurrencyCode } from "~app/utils/currency";
import type { AccountsId, DebtsId, ReceiptItemsId, ReceiptsId, SessionsSessionId, UsersId } from "~db/models";
import type { Temporal } from "~utils/date";
import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Numeric = ColumnType<string, number | string, number | string>;

export interface AccountConnectionsIntention {
  accountId: AccountsId;
  createdAt: Generated<Temporal.ZonedDateTime>;
  targetAccountId: AccountsId;
  updatedAt: Generated<Temporal.ZonedDateTime>;
  userId: UsersId;
}

export interface Account {
  avatarUrl: string | null;
  confirmationToken: string | null;
  confirmationTokenTimestamp: Temporal.ZonedDateTime | null;
  createdAt: Generated<Temporal.ZonedDateTime>;
  email: string;
  id: AccountsId;
  passwordHash: string;
  passwordSalt: string;
  role: string | null;
  updatedAt: Generated<Temporal.ZonedDateTime>;
}

export interface AccountSetting {
  accountId: AccountsId;
  manualAcceptDebts: boolean;
  updatedAt: Generated<Temporal.ZonedDateTime>;
}

export interface Debt {
  amount: Numeric;
  createdAt: Generated<Temporal.ZonedDateTime>;
  currencyCode: CurrencyCode;
  id: DebtsId;
  note: string;
  ownerAccountId: AccountsId;
  receiptId: ReceiptsId | null;
  timestamp: Temporal.PlainDate;
  updatedAt: Generated<Temporal.ZonedDateTime>;
  userId: UsersId;
}

export interface ReceiptItemConsumer {
  createdAt: Generated<Temporal.ZonedDateTime>;
  itemId: ReceiptItemsId;
  part: Numeric;
  updatedAt: Generated<Temporal.ZonedDateTime>;
  userId: UsersId;
}

export interface ReceiptItem {
  createdAt: Generated<Temporal.ZonedDateTime>;
  id: ReceiptItemsId;
  name: string;
  price: Numeric;
  quantity: Numeric;
  receiptId: ReceiptsId;
  updatedAt: Generated<Temporal.ZonedDateTime>;
}

export interface ReceiptParticipant {
  createdAt: Generated<Temporal.ZonedDateTime>;
  receiptId: ReceiptsId;
  role: string;
  updatedAt: Generated<Temporal.ZonedDateTime>;
  userId: UsersId;
}

export interface Receipt {
  createdAt: Generated<Temporal.ZonedDateTime>;
  currencyCode: CurrencyCode;
  id: ReceiptsId;
  issued: Temporal.PlainDate;
  name: string;
  ownerAccountId: AccountsId;
  updatedAt: Generated<Temporal.ZonedDateTime>;
}

export interface ResetPasswordIntention {
  accountId: AccountsId;
  createdAt: Generated<Temporal.ZonedDateTime>;
  expiresTimestamp: Temporal.ZonedDateTime;
  token: string;
  updatedAt: Generated<Temporal.ZonedDateTime>;
}

export interface Session {
  accountId: string;
  createdAt: Generated<Temporal.ZonedDateTime>;
  expirationTimestamp: Temporal.ZonedDateTime;
  sessionId: SessionsSessionId;
}

export interface User {
  acceptReceipts: Generated<boolean>;
  connectedAccountId: AccountsId | null;
  createdAt: Generated<Temporal.ZonedDateTime>;
  exposeReceipts: Generated<boolean>;
  id: UsersId;
  name: string;
  ownerAccountId: AccountsId;
  publicName: string | null;
  updatedAt: Generated<Temporal.ZonedDateTime>;
}

export interface DB {
  accountConnectionsIntentions: AccountConnectionsIntention;
  accounts: Account;
  accountSettings: AccountSetting;
  debts: Debt;
  receiptItemConsumers: ReceiptItemConsumer;
  receiptItems: ReceiptItem;
  receiptParticipants: ReceiptParticipant;
  receipts: Receipt;
  resetPasswordIntentions: ResetPasswordIntention;
  sessions: Session;
  users: User;
}
