name: CI
on:
  pull_request:
  push:
    branches:
      - master

jobs:
  replace-pr-number:
    name: Replace PR number in a message
    runs-on: ubuntu-latest
    if: ${{ github.ref != 'refs/heads/master' }}
    steps:
      - name: Replace Pull Request Body
        uses: ivangabriele/find-and-replace-pull-request-body@v1.1.5
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          find: "{{PR_NUMBER}}"
          replace: ${{ github.event.pull_request.number }}

  prettier:
    name: Prettier
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-env
      - name: Run code formatting verification
        run: npm run format:verify

  typecheck:
    name: Typecheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-env
      - name: Run typecheck
        run: yarn typecheck

  linter:
    name: Linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-env
      - name: Run linter
        run: yarn lint
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: typecheck
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-env
      - name: Build web app
        # Mode needed to inject .env.test file variables into the build
        run: yarn web:build --mode test
        env:
          S3_BUCKET: test-bucket
          S3_ENDPOINT: https://fake-endpoint.org
          ANALYZE_BUNDLE: true
      - name: Upload web build dir
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: |
            apps/web/.output
            !apps/web/.output/**/stats.json
            !*.map
          retention-days: 0
          include-hidden-files: true
          if-no-files-found: error
      - name: Upload bundle stats
        uses: actions/upload-artifact@v4
        with:
          name: web-build-stats
          path: apps/web/.output/public/_build/stats.json
          retention-days: 0
          if-no-files-found: error

  backend-test:
    name: Backend tests
    runs-on: ubuntu-latest
    outputs:
      coverage: ${{ steps.coverage-percent.outputs.coverage }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-env
      - name: Run backend tests
        run: yarn backend:test
      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage-report
          path: testing/vitest/coverage
          if-no-files-found: error
      - name: Report coverage
        uses: davelosert/vitest-coverage-report-action@v2
        with:
          name: backend
          working-directory: testing/vitest
          vite-config-path: ../../vitest.config.ts
      - name: Pass coverage percent to output
        id: coverage-percent
        run: |
          COVERAGE=$(node -e 'console.log(Object.entries(require("./testing/vitest/coverage/coverage-summary.json").total).reduce((acc, [, m]) => Math.min(acc, m.pct), 100))')
          echo "Coverage is $COVERAGE"
          echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT

  frontend-test:
    name: Frontend tests
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2, 3, 4]
        shardTotal: [4]
    container:
      image: mcr.microsoft.com/playwright:v1.53.0
    outputs:
      coverage: ${{ steps.coverage-percent.outputs.coverage }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-env
      - name: Fetch web build
        uses: actions/download-artifact@v4
        with:
          name: web-build
          path: apps/web/.output
      - name: Run frontend tests
        id: tests
        # see https://github.com/microsoft/playwright/issues/6500
        run: HOME=/root yarn frontend:test --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}
      - name: Upload Playwright report chunks
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: blob-report-${{ matrix.shardIndex }}
          path: testing/playwright/blob-report
          retention-days: 1

  merge-reports:
    name: Merge Playwright reports
    if: ${{ !cancelled() }}
    needs: frontend-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-env
      - name: Download blob reports from GitHub Actions Artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-blob-reports
          pattern: blob-report-*
          merge-multiple: true
      - name: Merge into HTML Report
        run: npx playwright merge-reports --reporter html ./all-blob-reports
      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: html-report-attempt-${{ github.run_attempt }}
          path: playwright-report
          retention-days: 30
          if-no-files-found: error
      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: frontend-coverage-report
          path: testing/playwright/coverage
      - name: Report coverage
        uses: davelosert/vitest-coverage-report-action@v2
        with:
          name: frontend
          working-directory: testing/playwright
      - name: Pass coverage percent to output
        id: coverage-percent
        run: |
          COVERAGE=$(node -e 'console.log(Object.entries(require("./testing/playwright/coverage/coverage-summary.json").total).reduce((acc, [, m]) => Math.min(acc, m.pct), 100))')
          echo "Coverage is $COVERAGE"
          echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT

  update-badges:
    name: Badges
    runs-on: ubuntu-latest
    needs:
      - backend-test
      - frontend-test
    steps:
      - name: Backend coverage badge
        uses: schneegans/dynamic-badges-action@v1.7.0
        env:
          branch: ${{ github.ref == 'refs/heads/master' && 'master' || github.event.pull_request.number }}
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: 878178ea4ba8d28122cc72204df909e7
          filename: backend_coverage_${{ env.branch }}.json
          label: Backend coverage
          message: ${{ needs.backend-test.outputs.coverage }}%
          valColorRange: ${{ needs.backend-test.outputs.coverage }}
          minColorRange: 50
          maxColorRange: 100
      - name: Frontend coverage badge
        uses: schneegans/dynamic-badges-action@v1.6.0
        env:
          branch: ${{ github.ref == 'refs/heads/master' && 'master' || github.event.pull_request.number }}
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: 878178ea4ba8d28122cc72204df909e7
          filename: frontend_coverage_${{ env.branch }}.json
          label: Frontend coverage
          message: ${{ needs.frontend-test.outputs.coverage }}%
          valColorRange: ${{ needs.frontend-test.outputs.coverage }}
          minColorRange: 50
          maxColorRange: 100

  check-generated-db-types:
    name: Check generated DB types
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-env
      - name: Run types generation
        run: yarn db:generate-types
        env:
          DATABASE_URL: ${{ secrets.PRODUCTION_DATABASE_URL }}
      - name: Check for uncommitted changes
        run: |
          if [[ -n "$(git status --porcelain ./packages/db/src/models)" ]]; then
            echo "Database types are out of sync. Run 'yarn db:generate-types' and commit the results."
            git --no-pager diff ./packages/db/src/models
            exit 1
          else
            echo "Database types are up-to-date."
          fi

  check-generated-route-types:
    name: Check generated route types
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check for uncommitted changes
        run: |
          if [[ -n "$(git status --porcelain ./apps/web/src/entry/routeTree.gen.ts)" ]]; then
            echo "Route types are out of sync. Run 'yarn web:dev' or 'yarn web:build' and commit the results."
            git --no-pager diff ./apps/web/src/entry/routeTree.gen.ts
            exit 1
          else
            echo "Route types are up-to-date."
          fi

  analyze:
    name: Analyze bundle
    runs-on: ubuntu-latest
    if: ${{ github.ref != 'refs/heads/master' }}
    needs: build
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-env
      - name: Download stats from latest successful run on `master`
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: continuous-integration-workflow.yml
          workflow_conclusion: completed
          branch: master
          github_token: ${{ secrets.GITHUB_TOKEN }}
          name: web-build-stats
          path: ./stats/base
      - name: Download stats from current run
        uses: actions/download-artifact@v4
        with:
          name: web-build-stats
          path: ./stats/current
      - name: Compare bundle size
        uses: wojtekmaj/vite-compare-bundle-size@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          current-stats-json-path: ./stats/current/stats.json
          base-stats-json-path: ./stats/base/stats.json
